<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMissile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-90</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 8;
Speed = 2;
alarm[1] = 1;

InWaterPrev = instance_place(x,y,oLiquid);
InWater = instance_place(x,y,oLiquid);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if Super
{

sound_play_pos(sndSMissile,x,y);
sound_play_pos(sndSMissileFly,x,y);

}
else
{


sound_play_pos(sndMissile,x,y);
sound_play_pos(sndMissileFly,x,y);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 8;

if !InWater
{
 d = instance_create(x,y,oFXAnim);
 d. sprite_index = sMissileSmoke;
 d. image_speed = 0.5;
 d. gravity_direction = 90;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.PausedGame
{
 image_speed = 0;
 alarm[0]++;
 exit;
}
else
{
 InWaterPrev = instance_place(x,y,oLiquid);
 image_index = (floor(global.Tick/2) mod 3);
 Mult = 1;
 if InWater Mult = .666;
 for (i=0;i&lt;Speed*Mult;i+=1)
 {
  x += lengthdir_x(1,direction);
  y += lengthdir_y(1,direction); 
 }
}

if Speed &lt; 6 + 2*Super Speed += .25;
if Speed &lt; 2 + Super Speed = 2 + Super;
  

if x &lt; view_xview-32 or x &gt; view_xview + view_wview + 32
or y &lt; view_yview-32 or y &gt; view_yview + view_hview + 32
 instance_destroy(); 
 
if instance_exists(oPlayer)
{
 if direction != 90 &amp;&amp; direction != 270
 {
  if (oPlayer.xVel &gt; 0 &amp;&amp; (x - xprevious) &gt; 0) or (oPlayer.xVel &lt; 0 &amp;&amp; (x - xprevious) &lt; 0)
   x += oPlayer.xVel;
 }
}

InWater = instance_place(x,y,oLiquid);

if instance_exists(id)
{
 if InWater &amp;&amp; !InWaterPrev
 { 
  Splash = instance_create(x,InWater.y,oSplash);
  Object = InWater.object_index;
  Splash.Creator = InWater; 
  if Object == oWater or Object == oPuddle
   Splash.sprite_index = sWaterSplash; 
   
   if Object == oAcid
    Splash.sprite_index = sAcidSplash3; 
   if Object == oWater or Object == oPuddle
    Splash.sprite_index = sWaterSplash3;
   sound_play_pos(sndSplashGround,x,y); 
  
 }
 if !InWater &amp;&amp; InWaterPrev
 { 
  Object = InWaterPrev.object_index;
 
  Splash = instance_create(x,InWaterPrev.y,oSplash);
  Splash.Creator = InWaterPrev;
  
  if Object == oAcid
   Splash.sprite_index = sAcidSplash2; 
  if Object == oWater or Object == oPuddle
   Splash.sprite_index = sWaterSplash2; 
 
   if Object == oAcid
    Splash.sprite_index = sAcidSplash3; 
   if Object == oWater or Object == oPuddle
    Splash.sprite_index = sWaterSplash3;
   sound_play_pos(sndSplashGround,x,y);
 }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSlope">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
event_user(0);
instance_destroy();


with (other) 
{
 if sprite_index==sBreakBomb
 {
  tile_layer_delete_at(Depth,x,y);
  visible = 1;
 }
 if object_index == oBreakShoot
 {
  event_user(0);
  visible = 1;
 }
 if object_index == oBreakBig
 {
  event_user(0);
  visible = 1;   
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSolidBlock">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
event_user(0);
instance_destroy();


with (other) 
{
 if sprite_index==sBreakBomb
 {
  tile_layer_delete_at(Depth,x,y);
  visible = 1;
 }
 if object_index == oBreakShoot
 {
  event_user(0);
  visible = 1;
 }
 if object_index == oBreakBig
 {
  event_user(0);
  visible = 1;   
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Reflect
if instance_exists(id)
{
 if !audio_is_playing(sndReflect)
 sound_play_pos(sndReflect,x,y);
 
 Ref = instance_create(x,y,oMissileBounce);
 Ref.sprite_index=sprite_index;
 Ref.image_angle=direction;
 Ref.Dir = direction;
 Ref.xVel = -lengthdir_x(choose(1,1.5),direction);
 Ref.yVel = choose(-2,-3);
 
 Ref = instance_create(x,y,oFXAnim);
 Ref.depth = -201;
 Ref.sprite_index=sReflect; 
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Projectile Impact and Explosion

if instance_exists(id)
{
 expl=instance_create(x,y,oFXAnim)
 expl.image_speed=0.5
 expl.depth=-201
  
 expl.sprite_index = sMissileDie;
 if Super
 {
  expl.sprite_index = sSMissileDie;
  Quake = instance_create(x,y,oQuake);
  Quake . Duration = 8;
  Quake . Intensity = 2;
 } 
 Sound = sndMissileDie;
 if Super
  Sound = sndSMissileDie;
 
 sound_play_pos(Sound,x,y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>6,3</point>
    <point>6,6</point>
  </PhysicsShapePoints>
</object>
