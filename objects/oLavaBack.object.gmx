<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> /// Tex Coords

Factor[0] = .25;
Factor[1] = .5;

TopY[0] = room_height - 28; // Foreground  28
BottomY[0] = room_height - 8;

TopY[1] = room_height - 64; // Background  40
BottomY[1] = room_height - 28;

Sep = 1/4;  // 1/12
Width = 32;  // 8

Tex = background_get_texture(txLava2);


// Do not use with oLavaFore if
// oLavaFore's Mode isn't additive.

// This is to only be used with oLavaFore with Mode 1



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// DRAW BACKGROUND


draw_set_color(c_white);
draw_primitive_begin_texture(4,Tex);
draw_set_blend_mode(bm_add);
 
TexX = 0;

for (i=-12;i&lt;=room_width/Width+12;i+=1)
{ 
 OffX = floor(-sin(global.TickP/60+i/8)*12*cos(global.TickP/60+i/8));
 OffXX = floor(-sin(global.TickP/60+(i+1)/8)*12*cos(global.TickP/60+(i+1)/8));

 X[0] = i*Width;
 Y[1] = TopY[1];
 X[1] = floor(i*Width - (i*Width-(view_xview+view_wview/2))*Factor[1]+OffX);
 Off = floor((i+1)*Width-((i+1)*Width-(view_xview+view_wview/2))*Factor[1]+OffXX);
 Y[0] = BottomY[1];
 
 draw_vertex_texture(X[0],Y[0],TexX,0);
 draw_vertex_texture(X[1],Y[1],TexX,1);
 draw_vertex_texture(Off,Y[1],TexX+Sep,1);
 
 draw_vertex_texture(X[0],Y[0],TexX,0);
 draw_vertex_texture(X[0]+Width,Y[0],TexX+Sep,0);
 draw_vertex_texture(Off,Y[1],TexX+Sep,1);

 TexX += Sep;
 if TexX &gt;= 1/2
  TexX = 0; 
}

draw_set_blend_mode(bm_normal); 
draw_primitive_end(); 




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
