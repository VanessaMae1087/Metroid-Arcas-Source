<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sMorphBall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-21</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Constants

image_speed = 0.125;
Collected = 0;
depth =- 30;
mask_index = sSolidBlock;

// Changing

Major = 1;
Power = 0;

String[0] = "INSERT STRING 0";
String[1] = "INSERT STRING 1";

Emit = -1;
Sond = -1;

Collected = 0;

alarm[11] = 2;

with (oControl) map_update();

if read_id(id)
{ 
 instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> map_set_mark(global.MapWorld,global.RoomX + floor(x/view_wview),global.RoomY + floor(y/view_hview),1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !read_id(id)
 map_set_mark(global.MapWorld,global.RoomX + floor(x/view_wview),global.RoomY + floor(y/view_hview),24); 
 else
 map_set_mark(global.MapWorld,global.RoomX + floor(x/view_wview),global.RoomY + floor(y/view_hview),1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.PausedGame
{
 image_speed = 0;
 if global.LastItem == id
  visible = 1 - visible;
}
 else
{
 image_speed = .125;
 visible = 1;
 if global.LastItem == id or Collected
 {
  instance_destroy();
 }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oMissile">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.PausedGame exit;


with (other)
{
 instance_destroy();
 event_user(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oBeam">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.PausedGame exit;

with (other)
{
 if PBeam == 0
  instance_destroy();
 event_user(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.PausedGame or global.LastItem == id or Collected exit;

Collected = 1;

global.PausedGame = 1;

if Power == P_VSUIT
or Power == P_GSUIT
 global.LastSuit = global.Suit;
 
if Major == 1
{
 Box = instance_create(x,y,oTextBox);  
 Box . String = String[0];  
 Box . Item = Power;
 Box . Power = Power;
 global.Unlock[Menu] += Name;
}
 else
{
 Box = instance_create(x,y,oTextBoxDouble);
 Box . String[0] = String[0];
 Box . String[1] = String[1]; 
}

if sprite_index == sPickMissile
{
 global.Missiles += 5 - (3*(global.Difficulty&gt;=2));
 global.MissilesMax += 5 - (3*(global.Difficulty&gt;=2));
}
if sprite_index == sPickSMissile
{
 global.SMissiles += 2 - (1*(global.Difficulty&gt;=2));
 global.SMissilesMax += 2 - (1*(global.Difficulty&gt;=2));
}



global.LastItem = id;

write_id(id);

if Major == 1
{
 if global.TrackNumber != 1
 global.ResumeTrack = global.TrackNumber;
 oSound.Volume = 0;
 music_stop();
 music_play(1);
 global.DoT = 1;
}
else
{
 Emit = audio_emitter_create();
 audio_emitter_gain(Emit, global.MusicVol); 
 Sond = audio_play_sound_on(Emit,musItemSmall,0,0);
}
 

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
